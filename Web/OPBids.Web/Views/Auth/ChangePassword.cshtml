@model OPBids.Entities.View.Auth.ChangePwdVM

@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_UnAuthenticated.cshtml";
}


<style type="text/css">
    body {
        background-color: #f2f2f2;
        display: flex;
        display: -ms-flexbox;
        flex-direction: column;
        -ms-flex-direction: column;
        justify-content: center;
        align-items: center;
        text-align: center;
        min-height: 100vh;
        height: 100vh;
    }

    .body-content {
        overflow: unset !important;
    }

    .login-container {
        background-color: #fff;
        padding: 20px;
        min-height: 450px;
        min-width: 350px;
    }

    .logo-section img {
        margin-top: -105px;
        margin-bottom: 50px;
    }

    .login-textbox {
        border: none;
    }
    
    .login-password {
        background-image: url("../../Content/images/icon-lock.png");
        background-position: 10px 5px;
        background-repeat: no-repeat;
        background-size: 24px auto;
    }

    .btn-section {
        margin-top: 20px;
    }

    .help-section {
        margin-top: 50px;
    }
</style>

@using (Html.BeginForm("ChangePassword", "Auth", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <div class="login-container">
            <div class="logo-section">
                <img src="~/Content/images/mmda-logo.png" />
            </div>
            @Html.HiddenFor(model => model.act_code)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-xs-11 login-password">
                    @Html.EditorFor(model => model.new_pwd, new { htmlAttributes = new { @class = "form-control login-textbox col-xs-10 col-xs-push-1", @placeholder = "New Password" } })
                    @Html.ValidationMessageFor(model => model.new_pwd, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-xs-11 login-password">
                    @Html.EditorFor(model => model.con_pwd, new { htmlAttributes = new { @class = "form-control login-textbox col-xs-10 col-xs-push-1", @placeholder = "Confirm Password" } })
                    @Html.ValidationMessageFor(model => model.con_pwd, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group btn-section">
                <div class="col-md-12">
                    <input type="submit" id="btnChangePwd" value="Change Password" class="btn btn-primary form-control" />
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    var ChangePassword = {
        Initialize: function () {
            localStorage.clear();

            if ('@ViewBag.Success' === 'True') {                
                Site.Dialogs.Alert("Password change successful!", "Ok", null);
                window.location.href = "@Url.Action("", "Auth/Login")";
            };
            $("#btnChangePwd").unbind();
            $("#btnChangePwd").click(function (e) {
                if (Site.ValidatePassword($("#new_pwd").val())) {                    
                    Site.Dialogs.Alert("Please enter a proper password!", "Ok", null);
                    return false;
                };
                if ($("#new_pwd").val() !== $("#con_pwd").val()) {                    
                    Site.Dialogs.Alert("Password does not match!", "Ok", null);
                    return false;
                }
            });

            $("#btnOk").unbind();
            $("#btnOk").click(function () {                
                window.location.href = "@Url.Action("", "Auth")";
            });
        }
    }
    $(function () {        
        ChangePassword.Initialize();
    });
</script>